# .github/workflows/android-ollvm-ndk.yml
name: Android-OLLVM-NDK

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:   # 允许手动触发

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ssageparuders/android_llvm_14.06:18.04   # 作者提供的镜像

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 把仓库映射到容器里 /workspace 目录，直接用镜像里的 clang/llvm/ndk 全套工具链
      - name: Build SsagePass inside Android-LLVM image
        run: |
          docker run --rm \
            -v "$PWD":/workspace \
            -w /workspace \
            ${{ env.IMAGE_NAME }} \
            bash -c "
              mkdir -p build && cd build
              cmake .. \
                -DCMAKE_BUILD_TYPE=Release \
                -DLLVM_DIR=/opt/llvm-14.0.6/lib/cmake/llvm \
                -DCMAKE_CXX_COMPILER=/opt/llvm-14.0.6/bin/clang++
              make -j$(nproc)
            "

      # 整理打包结构，方便 AIDE 用户直接放到 NDK toolchain 里
      - name: Package for AIDE-NDK
        run: |
          mkdir -p aide-ollvm-ndk/{bin,lib/clang/14.0.6/lib/linux}
          cp build/libSsageObfuscator.so aide-ollvm-ndk/lib/clang/14.0.6/lib/linux/
          cp HowToUse aide-ollvm-ndk/README.md
          tar -czf aide-ollvm-ndk.tar.gz aide-ollvm-ndk

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            aide-ollvm-ndk.tar.gz
          name: Android OLLVM NDK ${{ github.ref_name }}
          body: |
            预编译的 SsagePass LLVM Pass 动态库（Android NDK r25）
        

